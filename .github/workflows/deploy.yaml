name: CI/CD Pipeline

on:
  push:
    branches: [feat/dev]
  pull_request:
    branches: [feat/dev]

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: python-demo
  CLUSTER_NAME: demo-eks

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push Docker image to ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG ./app
        docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME
      
    

    - name: Check kubectl context
      run: |
        kubectl config get-contexts
        kubectl get nodes

    - name: Set image tag in Helm values
      run: |
        sed -i "s|tag:.*|tag: \"${GITHUB_SHA}\"|g" ./helm/python-demo/values.yaml

    - name: Deploy to EKS using Helm
      run: |
        helm upgrade --install python-demo ./helm/python-demo \
          --set image.repository=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }} \
          --set image.tag=${GITHUB_SHA} \
          --namespace default --create-namespace